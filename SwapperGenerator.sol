//SPDX-License-Identifier: MIT
pragma solidity 0.8.14;

import "./SwapperProxy.sol";
import "./Ownable.sol";

/**
    Generates Swapper Contracts For Users
 */
 contract SwapperProxyGenerator {

    // List Of All Proxies Generated By This Generator
    address[] public allProxies;

    // Master Proxy Implementation Contract
    SwapperProxy public masterProxy;

    // Token -> DEX -> Swapper
    mapping ( address => mapping ( address => address )) public getSwapper;

    // creation event
    event Created(address swapperContract, address token, address DEX);

    constructor(
        address proxy
    ) {
        masterProxy = SwapperProxy(payable(proxy));
    }

    function create(
        address token,
        address DEX
    ) external {

        // creates Proxy
        address nProxy = masterProxy.createProxy();

        // Initialize Proxy
        SwapperProxy(payable(nProxy)).__init__(
            token,
            DEX
        );

        // Add To List Of Proxies
        allProxies.push(nProxy);
        
        // register proxy for token and dex
        getSwapper[token][DEX] = nProxy;

        // Emit Proxy Creation Event
        emit Created(nProxy, token, DEX);
    }
}